{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Styled from './form.styles';\nimport Input from '../Input/input.commponent';\nimport Textarea from '../Textarea/textarea.component';\nimport Button from '../Button/button.component';\nimport { registrationFormSchema } from '../../../../helpers/validation';\nimport { sendFormEA } from '../../../../services/event';\nimport emailjs from 'emailjs-com';\n\nconst Form = () => {\n  const {\n    0: isSubmitted,\n    1: setSubmitted\n  } = useState(false);\n\n  const isEmptyObject = obj => {\n    return JSON.stringify(obj) === '{}';\n  };\n\n  return __jsx(Formik, {\n    validationSchema: registrationFormSchema,\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    onSubmit: async values => {\n      sendFormEA(values);\n      await emailjs.send('code_generation_sales', 'template_63y7U3ol', values, 'user_qBEngbKseuGY8AfrTEa7E');\n      setSubmitted(true);\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => {\n    return __jsx(Styled.FormWrapper, null, __jsx(Input, {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.name,\n      errors: errors,\n      touched: touched\n    }), __jsx(Input, {\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      errors: errors,\n      touched: touched\n    }), __jsx(Textarea, {\n      placeholder: \"Enter your message...\",\n      name: \"message\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.message,\n      errors: errors,\n      touched: touched\n    }), __jsx(Button, {\n      type: \"submit\",\n      disabled: isEmptyObject(touched) || !isEmptyObject(errors) || isSubmitting,\n      onClick: handleSubmit\n    }, \"Send\"), __jsx(Styled.SuccessMessageContainer, null, isSubmitted && __jsx(\"p\", {\n      className: \"success-message\"\n    }, \"Your message has been successfully delivered. Our Sales team will contact with you.\")));\n  });\n};\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}