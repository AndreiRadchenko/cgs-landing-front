{"ast":null,"code":"import ReactGA from 'react-ga';\nexport function scrollEA(data) {\n  const scrollToBlockEA = block => {\n    ReactGA.event({\n      category: 'Scroll Block',\n      action: 'ScrollToBlock',\n      label: `Scroll to ${block}`\n    });\n  };\n\n  const bloks = [];\n  document.querySelectorAll(`[${data}]`).forEach(e => {\n    bloks.push({\n      nameBlock: e.getAttribute(data),\n      distanceToTop: e.getBoundingClientRect().top\n    });\n  });\n  document.addEventListener('scroll', () => {\n    bloks.forEach((element, index) => {\n      if (element && window.scrollY > element.distanceToTop - window.scrollY / 8) {\n        scrollToBlockEA(element.nameBlock);\n        delete bloks[index];\n      }\n    });\n  });\n}\nexport const clickSocialLinkEA = link => {\n  ReactGA.event({\n    category: 'Social Link',\n    action: 'clickToSocialLink',\n    label: `${link}`\n  });\n};\nexport const onChangeSlideEA = sliderInfo => {\n  ReactGA.event({\n    category: `Slider ${sliderInfo.sliderName}`,\n    action: 'onSLideChange',\n    label: `Current slide ${sliderInfo.slide + 1}`\n  });\n};\nexport const startProjectEA = () => {\n  ReactGA.event({\n    category: 'Start Project',\n    action: 'Click the button',\n    label: 'Click start project button'\n  });\n};\nexport const sendFormEA = values => {\n  ReactGA.event({\n    category: 'Send Form',\n    action: 'Send Form',\n    label: `Validation was successful`\n  });\n};","map":{"version":3,"sources":["/Users/banax/Desktop/code-generation-landing/next/ui/src/services/event.ts"],"names":["ReactGA","scrollEA","data","scrollToBlockEA","block","event","category","action","label","bloks","document","querySelectorAll","forEach","e","push","nameBlock","getAttribute","distanceToTop","getBoundingClientRect","top","addEventListener","element","index","window","scrollY","clickSocialLinkEA","link","onChangeSlideEA","sliderInfo","sliderName","slide","startProjectEA","sendFormEA","values"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AAEA,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAgC;AACrC,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BJ,IAAAA,OAAO,CAACK,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,cADE;AAEZC,MAAAA,MAAM,EAAE,eAFI;AAGZC,MAAAA,KAAK,EAAG,aAAYJ,KAAM;AAHd,KAAd;AAKD,GAND;;AAQA,QAAMK,KAAiE,GAAG,EAA1E;AAEAC,EAAAA,QAAQ,CAACC,gBAAT,CAA2B,IAAGT,IAAK,GAAnC,EAAuCU,OAAvC,CAA+CC,CAAC,IAAI;AAClDJ,IAAAA,KAAK,CAACK,IAAN,CAAW;AACTC,MAAAA,SAAS,EAAEF,CAAC,CAACG,YAAF,CAAed,IAAf,CADF;AAETe,MAAAA,aAAa,EAAEJ,CAAC,CAACK,qBAAF,GAA0BC;AAFhC,KAAX;AAID,GALD;AAOAT,EAAAA,QAAQ,CAACU,gBAAT,CAA0B,QAA1B,EAAoC,MAAM;AACxCX,IAAAA,KAAK,CAACG,OAAN,CAAc,CAACS,OAAD,EAAUC,KAAV,KAAoB;AAChC,UACED,OAAO,IACPE,MAAM,CAACC,OAAP,GAAiBH,OAAO,CAACJ,aAAR,GAAwBM,MAAM,CAACC,OAAP,GAAiB,CAF5D,EAGE;AACArB,QAAAA,eAAe,CAACkB,OAAO,CAACN,SAAT,CAAf;AACA,eAAON,KAAK,CAACa,KAAD,CAAZ;AACD;AACF,KARD;AASD,GAVD;AAWD;AAED,OAAO,MAAMG,iBAAiB,GAAGC,IAAI,IAAI;AACvC1B,EAAAA,OAAO,CAACK,KAAR,CAAc;AACZC,IAAAA,QAAQ,EAAE,aADE;AAEZC,IAAAA,MAAM,EAAE,mBAFI;AAGZC,IAAAA,KAAK,EAAG,GAAEkB,IAAK;AAHH,GAAd;AAKD,CANM;AAQP,OAAO,MAAMC,eAAe,GAAGC,UAAU,IAAI;AAC3C5B,EAAAA,OAAO,CAACK,KAAR,CAAc;AACZC,IAAAA,QAAQ,EAAG,UAASsB,UAAU,CAACC,UAAW,EAD9B;AAEZtB,IAAAA,MAAM,EAAE,eAFI;AAGZC,IAAAA,KAAK,EAAG,iBAAgBoB,UAAU,CAACE,KAAX,GAAmB,CAAE;AAHjC,GAAd;AAKD,CANM;AAQP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC/B,EAAAA,OAAO,CAACK,KAAR,CAAc;AACZC,IAAAA,QAAQ,EAAE,eADE;AAEZC,IAAAA,MAAM,EAAE,kBAFI;AAGZC,IAAAA,KAAK,EAAE;AAHK,GAAd;AAKD,CANM;AAQP,OAAO,MAAMwB,UAAU,GAAGC,MAAM,IAAI;AAClCjC,EAAAA,OAAO,CAACK,KAAR,CAAc;AACZC,IAAAA,QAAQ,EAAE,WADE;AAEZC,IAAAA,MAAM,EAAE,WAFI;AAGZC,IAAAA,KAAK,EAAG;AAHI,GAAd;AAKD,CANM","sourcesContent":["import ReactGA from 'react-ga';\n\nexport function scrollEA(data: string) {\n  const scrollToBlockEA = block => {\n    ReactGA.event({\n      category: 'Scroll Block',\n      action: 'ScrollToBlock',\n      label: `Scroll to ${block}`,\n    });\n  };\n\n  const bloks: Array<{ nameBlock: string | null; distanceToTop: number }> = [];\n\n  document.querySelectorAll(`[${data}]`).forEach(e => {\n    bloks.push({\n      nameBlock: e.getAttribute(data),\n      distanceToTop: e.getBoundingClientRect().top,\n    });\n  });\n\n  document.addEventListener('scroll', () => {\n    bloks.forEach((element, index) => {\n      if (\n        element &&\n        window.scrollY > element.distanceToTop - window.scrollY / 8\n      ) {\n        scrollToBlockEA(element.nameBlock);\n        delete bloks[index];\n      }\n    });\n  });\n}\n\nexport const clickSocialLinkEA = link => {\n  ReactGA.event({\n    category: 'Social Link',\n    action: 'clickToSocialLink',\n    label: `${link}`,\n  });\n};\n\nexport const onChangeSlideEA = sliderInfo => {\n  ReactGA.event({\n    category: `Slider ${sliderInfo.sliderName}`,\n    action: 'onSLideChange',\n    label: `Current slide ${sliderInfo.slide + 1}`,\n  });\n};\n\nexport const startProjectEA = () => {\n  ReactGA.event({\n    category: 'Start Project',\n    action: 'Click the button',\n    label: 'Click start project button',\n  });\n};\n\nexport const sendFormEA = values => {\n  ReactGA.event({\n    category: 'Send Form',\n    action: 'Send Form',\n    label: `Validation was successful`,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}