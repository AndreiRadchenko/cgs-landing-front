{"ast":null,"code":"import _regeneratorRuntime from \"/Users/banax/Desktop/code-generation-landing/next/ui/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/banax/Desktop/code-generation-landing/next/ui/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Styled from './form.styles';\nimport Input from '../Input/input.commponent';\nimport Textarea from '../Textarea/textarea.component';\nimport Button from '../Button/button.component';\nimport { registrationFormSchema } from '../../../../helpers/validation';\nimport { sendFormEA } from '../../../../services/event';\nimport emailjs from 'emailjs-com';\n\nvar Form = function Form() {\n  var _useState = useState(false),\n      isSubmitted = _useState[0],\n      setSubmitted = _useState[1];\n\n  var isEmptyObject = function isEmptyObject(obj) {\n    return JSON.stringify(obj) === '{}';\n  };\n\n  return __jsx(Formik, {\n    validationSchema: registrationFormSchema,\n    initialValues: {\n      name: '',\n      email: '',\n      message: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                sendFormEA(values);\n                _context.next = 3;\n                return emailjs.send('code_generation_sales', 'template_63y7U3ol', values, 'user_qBEngbKseuGY8AfrTEa7E');\n\n              case 3:\n                setSubmitted(true);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit,\n        isSubmitting = _ref2.isSubmitting;\n    return __jsx(Styled.FormWrapper, null, __jsx(Input, {\n      placeholder: \"Name\",\n      type: \"text\",\n      name: \"name\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.name,\n      errors: errors,\n      touched: touched\n    }), __jsx(Input, {\n      placeholder: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.email,\n      errors: errors,\n      touched: touched\n    }), __jsx(Textarea, {\n      placeholder: \"Enter your message...\",\n      name: \"message\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.message,\n      errors: errors,\n      touched: touched\n    }), __jsx(Button, {\n      type: \"submit\",\n      disabled: isEmptyObject(touched) || !isEmptyObject(errors) || isSubmitting,\n      onClick: handleSubmit\n    }, \"Send\"), __jsx(Styled.SuccessMessageContainer, null, isSubmitted && __jsx(\"p\", {\n      className: \"success-message\"\n    }, \"Your message has been successfully delivered. Our Sales team will contact with you.\")));\n  });\n};\n\nexport default Form;","map":null,"metadata":{},"sourceType":"module"}