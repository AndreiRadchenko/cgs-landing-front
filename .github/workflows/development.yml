name: Development workflow

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./landing

    steps:
        # Check-out your repository.
        - name: Checkout
          uses: actions/checkout@v2


  ### ⬇ IMPORTANT PART ⬇ ###

        - name: Build, Push and Release a Docker container to Heroku. # Your custom step name
          uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
          with:
            # Below you must provide variables for your Heroku app.

            # The email address associated with your Heroku account.
            # If you don't want to use repository secrets (which is recommended) you can do:
            # email: my.email@example.com
            email: contact@codegenerationsoftware.com
            
            # Heroku API key associated with provided user's email.
            # Api Key is available under your Heroku account settings.
            heroku_api_key: b6b4ba72-baa5-46d0-b3f0-70bc0b71db02
            
            # Name of the heroku application to which the build is to be sent.
            heroku_app_name: cd-landing-frontend-stg

            # (Optional, default: "./")
            # Dockerfile directory.
            # For example, if you have a Dockerfile in the root of your project, leave it as follows:
            dockerfile_directory: ./landing

            # (Optional, default: "Dockerfile")
            # Dockerfile name.
            dockerfile_name: Dockerfile

            # (Optional, default: "")
            # Additional options of docker build command.
            docker_options: "--no-cache --env-file ./env"

            # (Optional, default: "web")
            # Select the process type for which you want the docker container to be uploaded.
            # By default, this argument is set to "web".
            # For more information look at https://devcenter.heroku.com/articles/process-model
            process_type: web